version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: catalog-sheet-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - SPREADSHEET_ID=${SPREADSHEET_ID}
      - GOOGLE_APPLICATION_CREDENTIALS_JSON=${GOOGLE_APPLICATION_CREDENTIALS_JSON}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ./backend/credentials.json:/app/backend/credentials.json:ro
      - caja_data:/app/backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (servido por nginx en producción)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: catalog-sheet-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:3001

  # Nginx reverse proxy (opcional para producción)
  nginx:
    image: nginx:alpine
    container_name: catalog-sheet-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  caja_data:
    driver: local 